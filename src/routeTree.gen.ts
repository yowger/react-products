/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PostLayoutImport } from './routes/_postLayout'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as PostsIdImport } from './routes/posts.$id'
import { Route as AuthProfileImport } from './routes/_auth.profile'
import { Route as authLoginImport } from './routes/(auth)/login'
import { Route as PostLayoutPostsIndexImport } from './routes/_postLayout.posts.index'
import { Route as AuthPostsCreateImport } from './routes/_auth.posts.create'
import { Route as AuthPostsIdEditImport } from './routes/_auth.posts.$id.edit'

// Create/Update Routes

const PostLayoutRoute = PostLayoutImport.update({
  id: '/_postLayout',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PostsIdRoute = PostsIdImport.update({
  id: '/posts/$id',
  path: '/posts/$id',
  getParentRoute: () => rootRoute,
} as any)

const AuthProfileRoute = AuthProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AuthRoute,
} as any)

const authLoginRoute = authLoginImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const PostLayoutPostsIndexRoute = PostLayoutPostsIndexImport.update({
  id: '/posts/',
  path: '/posts/',
  getParentRoute: () => PostLayoutRoute,
} as any)

const AuthPostsCreateRoute = AuthPostsCreateImport.update({
  id: '/posts/create',
  path: '/posts/create',
  getParentRoute: () => AuthRoute,
} as any)

const AuthPostsIdEditRoute = AuthPostsIdEditImport.update({
  id: '/posts/$id/edit',
  path: '/posts/$id/edit',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_postLayout': {
      id: '/_postLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PostLayoutImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof rootRoute
    }
    '/_auth/profile': {
      id: '/_auth/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthProfileImport
      parentRoute: typeof AuthImport
    }
    '/posts/$id': {
      id: '/posts/$id'
      path: '/posts/$id'
      fullPath: '/posts/$id'
      preLoaderRoute: typeof PostsIdImport
      parentRoute: typeof rootRoute
    }
    '/_auth/posts/create': {
      id: '/_auth/posts/create'
      path: '/posts/create'
      fullPath: '/posts/create'
      preLoaderRoute: typeof AuthPostsCreateImport
      parentRoute: typeof AuthImport
    }
    '/_postLayout/posts/': {
      id: '/_postLayout/posts/'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof PostLayoutPostsIndexImport
      parentRoute: typeof PostLayoutImport
    }
    '/_auth/posts/$id/edit': {
      id: '/_auth/posts/$id/edit'
      path: '/posts/$id/edit'
      fullPath: '/posts/$id/edit'
      preLoaderRoute: typeof AuthPostsIdEditImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthProfileRoute: typeof AuthProfileRoute
  AuthPostsCreateRoute: typeof AuthPostsCreateRoute
  AuthPostsIdEditRoute: typeof AuthPostsIdEditRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthProfileRoute: AuthProfileRoute,
  AuthPostsCreateRoute: AuthPostsCreateRoute,
  AuthPostsIdEditRoute: AuthPostsIdEditRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface PostLayoutRouteChildren {
  PostLayoutPostsIndexRoute: typeof PostLayoutPostsIndexRoute
}

const PostLayoutRouteChildren: PostLayoutRouteChildren = {
  PostLayoutPostsIndexRoute: PostLayoutPostsIndexRoute,
}

const PostLayoutRouteWithChildren = PostLayoutRoute._addFileChildren(
  PostLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof PostLayoutRouteWithChildren
  '/login': typeof authLoginRoute
  '/profile': typeof AuthProfileRoute
  '/posts/$id': typeof PostsIdRoute
  '/posts/create': typeof AuthPostsCreateRoute
  '/posts': typeof PostLayoutPostsIndexRoute
  '/posts/$id/edit': typeof AuthPostsIdEditRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof PostLayoutRouteWithChildren
  '/login': typeof authLoginRoute
  '/profile': typeof AuthProfileRoute
  '/posts/$id': typeof PostsIdRoute
  '/posts/create': typeof AuthPostsCreateRoute
  '/posts': typeof PostLayoutPostsIndexRoute
  '/posts/$id/edit': typeof AuthPostsIdEditRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_postLayout': typeof PostLayoutRouteWithChildren
  '/(auth)/login': typeof authLoginRoute
  '/_auth/profile': typeof AuthProfileRoute
  '/posts/$id': typeof PostsIdRoute
  '/_auth/posts/create': typeof AuthPostsCreateRoute
  '/_postLayout/posts/': typeof PostLayoutPostsIndexRoute
  '/_auth/posts/$id/edit': typeof AuthPostsIdEditRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/login'
    | '/profile'
    | '/posts/$id'
    | '/posts/create'
    | '/posts'
    | '/posts/$id/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/login'
    | '/profile'
    | '/posts/$id'
    | '/posts/create'
    | '/posts'
    | '/posts/$id/edit'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/_postLayout'
    | '/(auth)/login'
    | '/_auth/profile'
    | '/posts/$id'
    | '/_auth/posts/create'
    | '/_postLayout/posts/'
    | '/_auth/posts/$id/edit'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  PostLayoutRoute: typeof PostLayoutRouteWithChildren
  authLoginRoute: typeof authLoginRoute
  PostsIdRoute: typeof PostsIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  PostLayoutRoute: PostLayoutRouteWithChildren,
  authLoginRoute: authLoginRoute,
  PostsIdRoute: PostsIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/_postLayout",
        "/(auth)/login",
        "/posts/$id"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/profile",
        "/_auth/posts/create",
        "/_auth/posts/$id/edit"
      ]
    },
    "/_postLayout": {
      "filePath": "_postLayout.tsx",
      "children": [
        "/_postLayout/posts/"
      ]
    },
    "/(auth)/login": {
      "filePath": "(auth)/login.tsx"
    },
    "/_auth/profile": {
      "filePath": "_auth.profile.tsx",
      "parent": "/_auth"
    },
    "/posts/$id": {
      "filePath": "posts.$id.tsx"
    },
    "/_auth/posts/create": {
      "filePath": "_auth.posts.create.tsx",
      "parent": "/_auth"
    },
    "/_postLayout/posts/": {
      "filePath": "_postLayout.posts.index.tsx",
      "parent": "/_postLayout"
    },
    "/_auth/posts/$id/edit": {
      "filePath": "_auth.posts.$id.edit.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
