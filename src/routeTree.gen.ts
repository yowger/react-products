/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProfileImport } from './routes/profile'
import { Route as ProductsRouteImport } from './routes/products/route'
import { Route as IndexImport } from './routes/index'
import { Route as ProductsIndexImport } from './routes/products/index'
import { Route as ProductsCreateImport } from './routes/products/create'
import { Route as ProductsProductSlugIndexImport } from './routes/products/$productSlug/index'
import { Route as ProductsProductSlugEditImport } from './routes/products/$productSlug/edit'

// Create/Update Routes

const ProfileRoute = ProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const ProductsRouteRoute = ProductsRouteImport.update({
  id: '/products',
  path: '/products',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProductsIndexRoute = ProductsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProductsRouteRoute,
} as any)

const ProductsCreateRoute = ProductsCreateImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => ProductsRouteRoute,
} as any)

const ProductsProductSlugIndexRoute = ProductsProductSlugIndexImport.update({
  id: '/$productSlug/',
  path: '/$productSlug/',
  getParentRoute: () => ProductsRouteRoute,
} as any)

const ProductsProductSlugEditRoute = ProductsProductSlugEditImport.update({
  id: '/$productSlug/edit',
  path: '/$productSlug/edit',
  getParentRoute: () => ProductsRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/products': {
      id: '/products'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof ProductsRouteImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/products/create': {
      id: '/products/create'
      path: '/create'
      fullPath: '/products/create'
      preLoaderRoute: typeof ProductsCreateImport
      parentRoute: typeof ProductsRouteImport
    }
    '/products/': {
      id: '/products/'
      path: '/'
      fullPath: '/products/'
      preLoaderRoute: typeof ProductsIndexImport
      parentRoute: typeof ProductsRouteImport
    }
    '/products/$productSlug/edit': {
      id: '/products/$productSlug/edit'
      path: '/$productSlug/edit'
      fullPath: '/products/$productSlug/edit'
      preLoaderRoute: typeof ProductsProductSlugEditImport
      parentRoute: typeof ProductsRouteImport
    }
    '/products/$productSlug/': {
      id: '/products/$productSlug/'
      path: '/$productSlug'
      fullPath: '/products/$productSlug'
      preLoaderRoute: typeof ProductsProductSlugIndexImport
      parentRoute: typeof ProductsRouteImport
    }
  }
}

// Create and export the route tree

interface ProductsRouteRouteChildren {
  ProductsCreateRoute: typeof ProductsCreateRoute
  ProductsIndexRoute: typeof ProductsIndexRoute
  ProductsProductSlugEditRoute: typeof ProductsProductSlugEditRoute
  ProductsProductSlugIndexRoute: typeof ProductsProductSlugIndexRoute
}

const ProductsRouteRouteChildren: ProductsRouteRouteChildren = {
  ProductsCreateRoute: ProductsCreateRoute,
  ProductsIndexRoute: ProductsIndexRoute,
  ProductsProductSlugEditRoute: ProductsProductSlugEditRoute,
  ProductsProductSlugIndexRoute: ProductsProductSlugIndexRoute,
}

const ProductsRouteRouteWithChildren = ProductsRouteRoute._addFileChildren(
  ProductsRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/products': typeof ProductsRouteRouteWithChildren
  '/profile': typeof ProfileRoute
  '/products/create': typeof ProductsCreateRoute
  '/products/': typeof ProductsIndexRoute
  '/products/$productSlug/edit': typeof ProductsProductSlugEditRoute
  '/products/$productSlug': typeof ProductsProductSlugIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/profile': typeof ProfileRoute
  '/products/create': typeof ProductsCreateRoute
  '/products': typeof ProductsIndexRoute
  '/products/$productSlug/edit': typeof ProductsProductSlugEditRoute
  '/products/$productSlug': typeof ProductsProductSlugIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/products': typeof ProductsRouteRouteWithChildren
  '/profile': typeof ProfileRoute
  '/products/create': typeof ProductsCreateRoute
  '/products/': typeof ProductsIndexRoute
  '/products/$productSlug/edit': typeof ProductsProductSlugEditRoute
  '/products/$productSlug/': typeof ProductsProductSlugIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/products'
    | '/profile'
    | '/products/create'
    | '/products/'
    | '/products/$productSlug/edit'
    | '/products/$productSlug'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/profile'
    | '/products/create'
    | '/products'
    | '/products/$productSlug/edit'
    | '/products/$productSlug'
  id:
    | '__root__'
    | '/'
    | '/products'
    | '/profile'
    | '/products/create'
    | '/products/'
    | '/products/$productSlug/edit'
    | '/products/$productSlug/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProductsRouteRoute: typeof ProductsRouteRouteWithChildren
  ProfileRoute: typeof ProfileRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProductsRouteRoute: ProductsRouteRouteWithChildren,
  ProfileRoute: ProfileRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/products",
        "/profile"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/products": {
      "filePath": "products/route.tsx",
      "children": [
        "/products/create",
        "/products/",
        "/products/$productSlug/edit",
        "/products/$productSlug/"
      ]
    },
    "/profile": {
      "filePath": "profile.tsx"
    },
    "/products/create": {
      "filePath": "products/create.tsx",
      "parent": "/products"
    },
    "/products/": {
      "filePath": "products/index.tsx",
      "parent": "/products"
    },
    "/products/$productSlug/edit": {
      "filePath": "products/$productSlug/edit.tsx",
      "parent": "/products"
    },
    "/products/$productSlug/": {
      "filePath": "products/$productSlug/index.tsx",
      "parent": "/products"
    }
  }
}
ROUTE_MANIFEST_END */
