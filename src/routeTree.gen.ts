/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as ProductsIndexImport } from './routes/products.index'
import { Route as ProductsSlugImport } from './routes/products.$slug'
import { Route as AuthProfileImport } from './routes/_auth.profile'
import { Route as authLoginImport } from './routes/(auth)/login'
import { Route as AuthProductsCreateImport } from './routes/_auth.products.create'
import { Route as AuthProductsSlugEditImport } from './routes/_auth.products.$slug.edit'

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProductsIndexRoute = ProductsIndexImport.update({
  id: '/products/',
  path: '/products/',
  getParentRoute: () => rootRoute,
} as any)

const ProductsSlugRoute = ProductsSlugImport.update({
  id: '/products/$slug',
  path: '/products/$slug',
  getParentRoute: () => rootRoute,
} as any)

const AuthProfileRoute = AuthProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AuthRoute,
} as any)

const authLoginRoute = authLoginImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthProductsCreateRoute = AuthProductsCreateImport.update({
  id: '/products/create',
  path: '/products/create',
  getParentRoute: () => AuthRoute,
} as any)

const AuthProductsSlugEditRoute = AuthProductsSlugEditImport.update({
  id: '/products/$slug/edit',
  path: '/products/$slug/edit',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof rootRoute
    }
    '/_auth/profile': {
      id: '/_auth/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthProfileImport
      parentRoute: typeof AuthImport
    }
    '/products/$slug': {
      id: '/products/$slug'
      path: '/products/$slug'
      fullPath: '/products/$slug'
      preLoaderRoute: typeof ProductsSlugImport
      parentRoute: typeof rootRoute
    }
    '/products/': {
      id: '/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof ProductsIndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth/products/create': {
      id: '/_auth/products/create'
      path: '/products/create'
      fullPath: '/products/create'
      preLoaderRoute: typeof AuthProductsCreateImport
      parentRoute: typeof AuthImport
    }
    '/_auth/products/$slug/edit': {
      id: '/_auth/products/$slug/edit'
      path: '/products/$slug/edit'
      fullPath: '/products/$slug/edit'
      preLoaderRoute: typeof AuthProductsSlugEditImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthProfileRoute: typeof AuthProfileRoute
  AuthProductsCreateRoute: typeof AuthProductsCreateRoute
  AuthProductsSlugEditRoute: typeof AuthProductsSlugEditRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthProfileRoute: AuthProfileRoute,
  AuthProductsCreateRoute: AuthProductsCreateRoute,
  AuthProductsSlugEditRoute: AuthProductsSlugEditRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/login': typeof authLoginRoute
  '/profile': typeof AuthProfileRoute
  '/products/$slug': typeof ProductsSlugRoute
  '/products': typeof ProductsIndexRoute
  '/products/create': typeof AuthProductsCreateRoute
  '/products/$slug/edit': typeof AuthProductsSlugEditRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/login': typeof authLoginRoute
  '/profile': typeof AuthProfileRoute
  '/products/$slug': typeof ProductsSlugRoute
  '/products': typeof ProductsIndexRoute
  '/products/create': typeof AuthProductsCreateRoute
  '/products/$slug/edit': typeof AuthProductsSlugEditRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/(auth)/login': typeof authLoginRoute
  '/_auth/profile': typeof AuthProfileRoute
  '/products/$slug': typeof ProductsSlugRoute
  '/products/': typeof ProductsIndexRoute
  '/_auth/products/create': typeof AuthProductsCreateRoute
  '/_auth/products/$slug/edit': typeof AuthProductsSlugEditRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/login'
    | '/profile'
    | '/products/$slug'
    | '/products'
    | '/products/create'
    | '/products/$slug/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/login'
    | '/profile'
    | '/products/$slug'
    | '/products'
    | '/products/create'
    | '/products/$slug/edit'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/(auth)/login'
    | '/_auth/profile'
    | '/products/$slug'
    | '/products/'
    | '/_auth/products/create'
    | '/_auth/products/$slug/edit'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  authLoginRoute: typeof authLoginRoute
  ProductsSlugRoute: typeof ProductsSlugRoute
  ProductsIndexRoute: typeof ProductsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  authLoginRoute: authLoginRoute,
  ProductsSlugRoute: ProductsSlugRoute,
  ProductsIndexRoute: ProductsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/(auth)/login",
        "/products/$slug",
        "/products/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/profile",
        "/_auth/products/create",
        "/_auth/products/$slug/edit"
      ]
    },
    "/(auth)/login": {
      "filePath": "(auth)/login.tsx"
    },
    "/_auth/profile": {
      "filePath": "_auth.profile.tsx",
      "parent": "/_auth"
    },
    "/products/$slug": {
      "filePath": "products.$slug.tsx"
    },
    "/products/": {
      "filePath": "products.index.tsx"
    },
    "/_auth/products/create": {
      "filePath": "_auth.products.create.tsx",
      "parent": "/_auth"
    },
    "/_auth/products/$slug/edit": {
      "filePath": "_auth.products.$slug.edit.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
